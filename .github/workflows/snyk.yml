name: Snyk Security
on:
  push:
    branches: ["main" ]
    paths-ignore:
      - 'README.md'
      - 'jitpack.yml'
  pull_request:
    branches: ["main"]
    paths-ignore:
      - 'README.md'
      - 'jitpack.yml'
permissions:
  contents: read
jobs:
  snyk:
    permissions:
      contents: read
      security-events: write
      actions: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Snyk CLI to check for security issues
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb
      # For Snyk Open Source you must first set up the development environment for your application's dependencies
      # For example for Node
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Snyk Open Source Vulnerability Scan
        # Scans your pom.xml for open source dependency vulnerabilities
        # The Snyk CLI will automatically detect the pom.xml in the root.
        run: snyk test --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        # Runs Snyk Open Source (SCA) analysis and uploads result to Snyk.
      - name: Snyk Open Source monitor
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: snyk monitor --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        # Runs Snyk Code (SAST) analysis and uploads result into GitHub.
        # Use || true to not fail the pipeline
      - name: Snyk test
        run: snyk code test --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}